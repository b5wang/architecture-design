Topic of this experiment:
Create master-slave replication from scratch
1. Create 2 new mysql, mysql-1 and mysql-2. Later mysql-1 will become master, and mysql-2 will become slave.
2. Add some data into mysql-1
3. Set up slave repliation
4. Checking the data replication between master and slave



#------------------------------------------------------------------------------
Enable gtid mode
gtid: global transaction identifier. It is globally unique in the scope of overall mysql cluster.
One gtid is only executed once in a mysql server.
It replaces the traditional binlog file and position points to simply and enhance the master and slave replication.

GTID = <server_uuid>:<transaction_id>

<<<
[mysqld]
......
# both master and slave configuration
# gtid mode
gtid_mode=ON
enforce_gtid_consistency=ON
expire-logs-days=15
log_slave_updates=1
# binlog
log_bin=mysql-bin
binlog_format=ROW

# slave configuration
# relaylog - replication
master_info_repository=TABLE
relay_log_info_repository=TABLE
relay_log_recovery=ON
relay-log=mysql-relay

slave-parallel-workers=4
slave-parallel-type=LOGICAL_CLOCK
>>>



#------------------------------------------------------------------------------




#------------------------------------------------------------------------------
1. Create 2 mysql DB
<<<
./build.sh
>>>


2. Create some data in mysql-1/mydb
<<<
CREATE TABLE IF NOT EXISTS kv(
    k INT PRIMARY KEY AUTO_INCREMENT,
    v VARCHAR(255)
);

-- execute for 5 times
insert into kv(v) values(now());
select * from kv;
>>>


3. Set up master-slave. mysql-1 master, mysql-2 slave
On mysql-1, master:
<<<
mysql -uroot -p111
mysql> CREATE USER "mydb_slave_user"@"%" IDENTIFIED BY "mydb_slave_pwd"; 
mysql> GRANT REPLICATION SLAVE ON *.* TO "mydb_slave_user"@"%";
mysql> FLUSH PRIVILEGES;
mysql> SHOW MASTER STATUS \G;
*************************** 1. row ***************************
             File: mysql-bin.000003
         Position: 2546
     Binlog_Do_DB: 
 Binlog_Ignore_DB: 
Executed_Gtid_Set: 69541a24-763b-11ed-97d7-0242ac120002:1-17
1 row in set (0.00 sec)

ERROR: 
No query specified
>>>


On mysql-2, slave:
<<<
mysql -uroot -p111
# when gtid_mode=on
mysql> CHANGE MASTER TO MASTER_HOST='mysql-1',MASTER_PORT=3306,MASTER_USER='mydb_slave_user',MASTER_PASSWORD='mydb_slave_pwd',MASTER_AUTO_POSITION=1;
mysql> start slave;
mysql> show slave status \G;
>>>
# Other options to set up slave. With log_file and log_pos
# CHANGE MASTER TO MASTER_HOST='mysql-1',MASTER_PORT=3306,MASTER_USER='mydb_slave_user',MASTER_PASSWORD='mydb_slave_pwd',MASTER_LOG_FILE='mysql-bin.000003',MASTER_LOG_POS=2546;
# CHANGE MASTER TO MASTER_HOST='mysql-1',MASTER_PORT=3306,MASTER_USER='mydb_slave_user',MASTER_PASSWORD='mydb_slave_pwd',MASTER_LOG_FILE='<binlog_file>',MASTER_LOG_POS=<binlog_pos>;




#------------------------------------------------------------------------------
mysql> FLUSH TABLES WITH READ LOCK;
mysql> SHOW VARIABLES LIKE '%lock%';
- master:
mysqldump -u root -p --all-databases --master-data > dbdump.sql
mysql> UNLOCK TABLES;

- slave:
mysql -u root -p < dbdump.sql

# -e "sql statement to execute"
