#=======
# In Mac or Linux, docker+minikube
# 1. Install latest docker desktop
> docker COMMAND --help
> docker -v
> docker --version
# 2. Install latest virtual box -- In macOS 13+, minikube does not support virtual box, should use docker
# 3. Install latest Minikube
# MacOS
> curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64
> sudo install minikube-darwin-amd64 /usr/local/bin/minikube
# Linux
curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
> minikube <command> --help
> minikube version
# Also can use following command to run kubectl
> minikube kubectl -- <kubectl options>
> kubectl <command> --help
> kubectl version
##-----------------------------------------------------------
# my mac
> minikube start --cpus=8 --driver=docker --memory=8g
# using fixed ip
> minikube start --cpus=8 --driver=docker --memory=8g --static-ip=192.168.0.99
> minikube start --cpus 8 --driver docker --memory 8g --static-ip 10.0.0.2
# my window desktop 24cpu 32G rem
> minikube start --cpus=16 --driver=docker --memory=16g
> minikube start --cpus=16 --driver=docker --memory=14g
> minikube start --cpus=16 --driver=docker --memory=16g --static-ip 10.0.0.2
> minkube ip
##---
> minikube start --driver=docker --memory=16g --cpus=16
W1113 23:22:28.100002   22300 main.go:291] Unable to resolve the current Docker CLI context "default": context "default": context not found: open C:\Users\b5wang\.docker\contexts\meta\37a8eec1ce19687d132fe29051dca629d164e2c4958ba141d5f4133a33f0688f\meta.json: The system cannot find the path specified.
😄  minikube v1.32.0 on Microsoft Windows 11 Home 10.0.22621.2428 Build 22621.2428
✨  Using the docker driver based on user configuration

❌  Exiting due to MK_USAGE: Docker Desktop has only 15877MB memory but you specified 16384MB

# 4. Install latest kubectl
Install manually: https://kubernetes.io/docs/tasks/tools/
Mac: https://kubernetes.io/docs/tasks/tools/install-kubectl-macos/
> curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl"
> curl -LO "https://dl.k8s.io/release/v1.30.0/bin/darwin/amd64/kubectl"
> sudo install kubectl /usr/local/bin/kubectl && rm kubectl
Linux: https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
> curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
> curl -LO "https://dl.k8s.io/release/v1.30.0/bin/linux/amd64/kubectl"
> sudo install kubectl /usr/local/bin/kubectl && rm kubectl
# Internatively using minikube
> minikube kubectl
C:\Users\b5wang>docker context use default
default
Current context is now "default"
#------------------------------------------------------------------------
# Enable some addons
> minikube addons enable dashboard
#  Some dashboard features require the metrics-server addon. To enable all features please run:
> minikube addons enable metrics-server
> minikube 
#------------------------------------------------------------------------

# 5. Install helm: https://helm.sh/docs/intro/install/
# helm3
Download binary command https://github.com/helm/helm/releases
> tar -zxvf helm-v3.15.2-darwin-amd64.tar.gz
> sudo install linux-amd64/helm /usr/local/bin/helm && rm linux-amd64/helm
> helm --help

# 6. Access application deployed on minikube 
## Using docker must use tunnel
> minikube tunnel
## Install kubernetes with minikube
> minikube kubectl
> minikube addons list
> minikube addons enable dashboard
> minikube dashboard
> minikube --help
> minikube <command> --help
# expose yaml
> kubectl get service kubernetes-dashboard --output=yaml --namespace=kubernetes-dashboard
# apply kubernetes object with yaml
> kubectl apply --filename=svc-kubernetes-dashboard-loadbalancer.yaml
> kubectl apply --f svc-kubernetes-dashboard-loadbalancer.yaml
> minikube tunnel
OR
> minikube service kubernetes-dashboard --namespace=kubernetes-dashboard --url
##---
> kubectl delete deployment hello-minikube1 --namespace=default
> kubectl delete service hello-minikube1 --namespace=default

# 7. Login docker hub registry
> docker login --help
> docker login --username <username> --password <password> <server_url>


##==========================================================================
Minikube start error
> minikube start
😄  minikube v1.33.1 on Ubuntu 22.04 (amd64)
✨  Using the docker driver based on existing profile
👍  Starting "minikube" primary control-plane node in "minikube" cluster
🚜  Pulling base image v0.0.44 ...
🔄  Restarting existing docker container for "minikube" ...
🤦  StartHost failed, but will try again: provision: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
template parsing error: template: :1:4: executing "" at <index (index .NetworkSettings.Ports "22/tcp") 0>: error calling index: reflect: slice index out of range

🏃  Updating the running docker "minikube" container ...
🐳  Preparing Kubernetes v1.30.0 on Docker 26.1.1 ...
🔎  Verifying Kubernetes components...
    ▪ Using image docker.io/kubernetesui/dashboard:v2.7.0
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
    ▪ Using image registry.k8s.io/metrics-server/metrics-server:v0.7.1
    ▪ Using image docker.io/kubernetesui/metrics-scraper:v1.0.8
💡  Some dashboard features require the metrics-server addon. To enable all features please run:

        minikube addons enable metrics-server

🌟  Enabled addons: storage-provisioner, dashboard, metrics-server, default-storageclass
🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

Solution:
> docker system prune
> minikube delete
> minikube start --driver=docker


#=======
# In Windows, virtualbox+minikue
# Install minikube with virtualbox
# 1. Install virtualbox
https://www.virtualbox.org/wiki/Downloads
# 2. upgrade powershell to 7.4
https://learn.microsoft.com/en-us/powershell/scripting/whats-new/migrating-from-windows-powershell-51-to-powershell-7?view=powershell-7.4
- Powershell is designed for cloud, on-premises, and hybrid systems.
- Powershell 7 and 5.1 will be running side by side. They will coexist.
- PowerShell 7 is built on .NET 6.0. Windows PowerShell 5.1 is built on .NET Framework 4.x. 
  The differences between the .NET versions might affect the behavior of your scripts, especially if you are calling .NET method directly.
- Separate pathes. Install locations by version:
  Windows PowerShell 5.1: $env:WINDIR\System32\WindowsPowerShell\v1.0
  PowerShell 6.x: $env:ProgramFiles\PowerShell\6
  PowerShell 7: $env:ProgramFiles\PowerShell\7
- Different executable names, 5 is powershell.ext, above 6 is pwsh.exe
- Separate profiles
- PowerShell 7 compatibility with Windows PowerShell 5.1 modules
- PowerShell Remoting. 
  + WS-Management remoting
  + SSH-based remoting
# Install PowerShell using Winget (recommended)
https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.4#winget
# 3. Determine your version of PowerShell
$PSVersionTable
# 4. Change terminal uses powershell 7
Backup PS5: %SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe
PS7: C:\Program Files\PowerShell\7\pwsh.exe

# 5. Install minikube in windows
https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download
---
Output folder: D:\Tools\Cloud\Kubernetes\Minikube
Extract: minikube.exe... 100%
Extract: logo.ico... 100%
Extract: update_path.ps1... 100%
Created uninstaller: D:\Tools\Cloud\Kubernetes\Minikube\uninstall.exe
Create folder: C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Kubernetes
Create shortcut: C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Kubernetes\Minikube.lnk
Path needs to be added.
Checking if the given path already exists or not
The given path was not found. Adding it now.
Path has been added successfully.
Completed

# 6. Terminal starts with administrator
> minikube start --cpus=16 --memory=16g --driver=virtualbox

PS C:\Users\Admin> minikube start --cpus=16 --memory=16g --driver=virtualbox
😄  minikube v1.34.0 on Microsoft Windows 11 Home 10.0.22631.4317 Build 22631.4317
✨  Using the virtualbox driver based on user configuration
💿  Downloading VM boot image ...
    > minikube-v1.34.0-amd64.iso....:  65 B / 65 B [---------] 100.00% ? p/s 0s
    > minikube-v1.34.0-amd64.iso:  333.55 MiB / 333.55 MiB  100.00% 15.44 MiB p
👍  Starting "minikube" primary control-plane node in "minikube" cluster
💾  Downloading Kubernetes v1.31.0 preload ...
    > preloaded-images-k8s-v18-v1...:  326.69 MiB / 326.69 MiB  100.00% 18.29 M
🔥  Creating virtualbox VM (CPUs=16, Memory=16384MB, Disk=20000MB) ...
🤦  StartHost failed, but will try again: creating host: create: precreate: This computer doesn't have VT-X/AMD-v enabled. Enabling it in the BIOS is mandatory
🔥  Creating virtualbox VM (CPUs=16, Memory=16384MB, Disk=20000MB) ...
😿  Failed to start virtualbox VM. Running "minikube delete" may fix it: creating host: create: precreate: This computer doesn't have VT-X/AMD-v enabled. Enabling it in the BIOS is mandatory

❌  Exiting due to HOST_VIRT_UNAVAILABLE: Failed to start host: creating host: create: precreate: This computer doesn't have VT-X/AMD-v enabled. Enabling it in the BIOS is mandatory
💡  Suggestion: Virtualization support is disabled on your computer. If you are running minikube within a VM, try '--driver=docker'. Otherwise, consult your systems BIOS manual for how to enable virtualization.
🍿  Related issues:
    ▪ https://github.com/kubernetes/minikube/issues/3900
    ▪ https://github.com/kubernetes/minikube/issues/4730
Solution: https://stackoverflow.com/questions/70813386/how-to-resolve-minikube-start-error-this-computer-doesnt-have-vt-x-amd-v-enab

> minikube start --cpus=16 --memory=16g --driver=virtualbox --no-vtx-check
PS C:\Users\b5wang> minikube start --cpus=16 --memory=16g --driver=virtualbox --no-vtx-check
😄  minikube v1.34.0 on Microsoft Windows 11 Home 10.0.22631.4317 Build 22631.4317
✨  Using the virtualbox driver based on user configuration
💿  Downloading VM boot image ...
    > minikube-v1.34.0-amd64.iso....:  65 B / 65 B [---------] 100.00% ? p/s 0s
    > minikube-v1.34.0-amd64.iso:  333.55 MiB / 333.55 MiB  100.00% 20.71 MiB p
👍  Starting "minikube" primary control-plane node in "minikube" cluster
💾  Downloading Kubernetes v1.31.0 preload ...
    > preloaded-images-k8s-v18-v1...:  326.69 MiB / 326.69 MiB  100.00% 20.59 M
🔥  Creating virtualbox VM (CPUs=16, Memory=16384MB, Disk=20000MB) ...
🔥  Deleting "minikube" in virtualbox ...
🤦  StartHost failed, but will try again: creating host: create host timed out in 360.000000 seconds
😿  Failed to start virtualbox VM. Running "minikube delete" may fix it: error loading existing host. Please try running [minikube delete], then run [minikube start] again: filestore "minikube": open C:\Users\b5wang\.minikube\machines\minikube\config.json: The system cannot find the file specified.

❌  Exiting due to GUEST_NOT_FOUND: Failed to start host: error loading existing host. Please try running [minikube delete], then run [minikube start] again: filestore "minikube": open C:\Users\b5wang\.minikube\machines\minikube\config.json: The system cannot find the file specified.
💡  Suggestion: minikube is missing files relating to your guest environment. This can be fixed by running 'minikube delete'
🍿  Related issue: https://github.com/kubernetes/minikube/issues/9130

# In virtualbox, File --> Reference --> Expert --> General --> Default machine folder: C:\Users\b5wang\VirtualBox VMs, manually create this folder
PS C:\Users\b5wang> minikube start --cpus=16 --memory=16g --driver=virtualbox --no-vtx-check --static-ip=192.168.0.100
😄  minikube v1.34.0 on Microsoft Windows 11 Home 10.0.22631.4317 Build 22631.4317
✨  Using the virtualbox driver based on user configuration
👍  Starting "minikube" primary control-plane node in "minikube" cluster
🔥  Creating virtualbox VM (CPUs=16, Memory=16384MB, Disk=20000MB) ...
❗  Failing to connect to https://registry.k8s.io/ from inside the minikube VM
💡  To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/
🐳  Preparing Kubernetes v1.31.0 on Docker 27.2.0 ...
    ▪ Generating certificates and keys ...
    ▪ Booting up control plane ...
    ▪ Configuring RBAC rules ...
🔗  Configuring bridge CNI (Container Networking Interface) ...
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
🔎  Verifying Kubernetes components...
🌟  Enabled addons: storage-provisioner, default-storageclass
🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default
------------------------------------------------------------------------------------------------------------------------
Finally decide using powershell 7 + minikube + docker in Windows 11. Using virtualbox has too much uncertainty, wasting time!!!



#=======
# In Windows, minikue + docker + powershell
- Update powershell to 7
- Install docker desktop
- Install minikube (+kubernetes)
> 







 



